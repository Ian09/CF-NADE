//
//                       _oo0oo_
//                      o8888888o
//                      88" . "88
//                      (| -_- |)
//                      0\  =  /0
//                    ___/`---'\___
//                  .' \\|     |// '.
//                 / \\|||  :  |||// \
//                / _||||| -:- |||||- \
//               |   | \\\  -  /// |   |
//               | \_|  ''\---/''  |_/ |
//               \  .-\__  '-'  ___/-. /
//             ___'. .'  /--.--\  `. .'___
//          ."" '<  `.___\_<|>_/___.' >' "".
//         | | :  `- \`.;`\ _ /`;.`/ - ` : | |
//         \  \ `_.   \_ __\ /__ _/   .-` /  /
//     =====`-.____`.___ \_____/___.-`___.-'=====
//                       `=---='
//
//
//     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
//
//               佛祖保佑         永无BUG
//
//
//
New implementation on code for "A Neural Autoregressive Approach to Collaborative Filtering", ICML 2016

See in /new_implement

Dependency:

You need to install:
Theano: http://deeplearning.net/software/theano/
blocks: http://blocks.readthedocs.io/en/latest/bricks_overview.html
		version 0.1.1 is requred


In this code, you can use the code in "datasets" to generate a hdf5 dataset to feed CF-NADE. 
Then you can run "learner_ordinalcost_directly_itembased_newsoftmax_timing.py" to train and 
test CF-NADE.

And example to run the code is:

MovieLens1M=/Users/yin.zheng/ml_datasets/MovieLens1M-shuffle-itembased-0 python learner_ordinalcost_directly_itembased_newsoftmax_timing.py 512 10 60 0.001 0.1 0.001 1e-8 500 tanh 0 0.02 Adam 0 1 0.995 /tmp/cfnade
